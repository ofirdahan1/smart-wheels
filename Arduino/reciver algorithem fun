#ifndef B_ALGORITHMS_FUN_H
#define B_ALGORITHMS_FUN_H

#include "D_global.h"
#include "C_sensors_fun.h"


void red_raise(int start1,int end1)//increse/decres the speed at good pace
{if (start1>end1+5){
  pwmT = start1-rate;
  rate=rate+1;
  delay(time_delay);
  if (start1-end1<=rate){
    rate=int (rate/2);
      }
    }
 else if (start1<end1-5){
  pwmT = start1+rate;
  rate=rate+1;
  delay(time_delay);
   if (end1-start1<=rate){
    rate=int (rate/2);
      }
     }
 else{
  pwmT = end1;
  rate=1;
 }
  
}

void wheel_power()
{   
    turn();
     
  
    if(abs(roll)>10)
      {roll1=int(roll*2);
       pwmL=constrain(pwmT+roll1,rc_elevator_pulsewidth_min_out,rc_elevator_pulsewidth_max_out);
       pwmR=constrain(pwmT-roll1,rc_elevator_pulsewidth_min_out,rc_elevator_pulsewidth_max_out);
      }
    else{pwmL=pwmT;
         pwmR=pwmT;
        }
    
    throttleLEFT.writeMicroseconds(pwmL);
    throttleRIGHT.writeMicroseconds(pwmR);
          Serial.print(pwmL);
          Serial.print("/");
          Serial.print(pwmR);
          Serial.print("/");
          Serial.print(distance1);
          Serial.print("/");
          Serial.print(pwm);
          Serial.print("/");
          Serial.print(roll);
          Serial.println("/");
  }
  
 
#endif
